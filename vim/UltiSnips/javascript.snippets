snippet desc "describe block"
describe('$1', () => {
  $0
});
endsnippet

snippet context "context block"
context('$1', () => {
  $0
});
endsnippet

snippet bef "before"
before(() => {
  $0
});
endsnippet

snippet befa "async before"
before(async() => {
  $0
});
endsnippet

snippet jbef "jest before"
beforeAll(() => {
  $0
});
endsnippet

snippet jbefa "jest async before"
beforeAll(async() => {
  $0
});

endsnippet
snippet befe "before each"
beforeEach(() => {
  $0
});
endsnippet

snippet befea "async before each"
beforeEach(async() => {
  $0
});
endsnippet

snippet aft "after"
after(() => {
  $0
});
endsnippet

snippet afta "async after"
after(async() => {
  $0
});
endsnippet

snippet jaft "jest after"
after(() => {
  $0
});
endsnippet

snippet jafta "jest async after"
after(async() => {
  $0
});
endsnippet

snippet afte "after each"
afterEach(() => {
  $0
});
endsnippet

snippet aftea "async after each"
afterEach(async() => {
  $0
});
endsnippet

snippet it "it block"
it('$1', () => {
  $0
});
endsnippet

snippet ita "async it block"
it('$1', async() => {
  $0
});
endsnippet

snippet test "test block"
test('$1', () => {
  $0
});
endsnippet

snippet testa "async test block"
test('$1', async() => {
  $0
});
endsnippet

snippet caf "const arrow function"
const $1 = ($2) => {
  $0
}
endsnippet

snippet cafa "async const arrow function"
const $1 = async($2) => {
  $0
}
endsnippet

snippet af "arrow function"
($1) => {
  $0
}
endsnippet

snippet afa "async arrow function"
async($1) => {
  $0
}
endsnippet

snippet ctag "tag"
<$0 />
endsnippet

snippet tag "tag"
<$1>
  $0
</$1>
endsnippet

snippet cl "console.log"
console.log($0);
endsnippet

snippet import "import"
import $1 from '$0';
endsnippet

snippet require "require"
const $1 = require('$0');
endsnippet
